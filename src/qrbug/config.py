from pathlib import Path
import sys
import qrbug

SETTINGS = { # Do not modify these settings.
'TOKEN_LOGIN_TIMEOUT': [600                              ,'Session duration in seconds'],
'CAS_URL'            : ['https://cas.univ-lyon1.fr/cas'  ,'CAS url for centralized login'],
'SERVICE_URL'        : ['http://qrbug.univ-lyon1.fr:8080','User facing QRBUG address'],
'HOST'               : ['localhost'                      ,'Server IP to bind'],
'PORT'               : [8080                             ,'Server port to bind'],
'SMTP_SERVER'        : [['smtp1.yr.domn','smtp2.yr.domn'],'SMTP servers'],
'SMTP_DEFAULT_SENDER': ['donotreply@nowhere.in.the.world','From address for QRBUG emails'],
'LDAP_SERVER'        : ['ldaps:ldap.your.domain'         ,'LDAP server to get emails'],
'LDAP_LOGIN'         : ['admin_login'                    ,'LDAP server login'],
'LDAP_PASSWORD'      : ['admin_password'                 ,'LDAP server password'],
'LDAP_DC'            : ['DC=your,DC=domain'              ,'LDAP top level for users'],
'LDAP_ID'            : ['sAMAccountName'                 ,'LDAP attribute name for login'],
'DEFAULT_EMAIL_TO'   : ['an-administrator@your.domain'   ,'If no email are found'],
'LOG_FORMAT'         : ['%Y%m%d%H%M%S'                   ,'filename of LOGS'],
'QRBUG_ADMINS'       : [['thierry.excoffier', 'p2205989'],'Logins of QRBUG managers'],
'QRBUG_BACKTRACE'    : [['thierry.excoffier']            ,'Logins concerned by QRBUG backtrace'],
'MESSAGES'           : ['STATIC/messages_fr'             ,'File containing the default messages'],
}

def nice():
    """Generate a nicely formatted PYthon file src/qrbug/settings.py"""
    return ''.join(
        f'{key:19}= {repr(value):35} # {comment}\n'
        for key, (value, comment) in sorted(SETTINGS.items()))
try:
    import qrbug.settings
    for key in SETTINGS:
        if hasattr(qrbug.settings, key):
            SETTINGS[key][0] = getattr(qrbug.settings, key)
    print("La configuration trouvée dans «src/qrbug/settings.py» a été utilisée.")
except ModuleNotFoundError:
    Path('src/qrbug/settings.py').write_text(nice(), encoding='utf-8')
    print("«src/qrbug/settings.py» n'a pas été trouvé.")
    print("Une version par défaut non fonctionnelle a été créé.")
    print("Modifiez là ! et relancez.")
    sys.exit(1)

SETTINGS['SERVICE_URL'][0] = SETTINGS['SERVICE_URL'][0].rstrip('/')

print()
for key, (value, _comment) in SETTINGS.items():
    globals()[key] = value
    setattr(qrbug, key, value)
print(nice())

qrbug.JOURNALS_FILE_PATH        = Path("JOURNALS")
qrbug.DB_FILE_PATH              = qrbug.JOURNALS_FILE_PATH / "db.py"
qrbug.DEFAULT_DB_PATH           = qrbug.JOURNALS_FILE_PATH / "default_db.py"
qrbug.GENERATED_DB_PATH         = qrbug.JOURNALS_FILE_PATH / "xxx_generated_db.py"
qrbug.INCIDENTS_FILE_PATH       = qrbug.JOURNALS_FILE_PATH / "incidents.py"
qrbug.STATIC_FILES_PATH         = Path('STATIC')
qrbug.FAVICON_PATH              = qrbug.STATIC_FILES_PATH / 'favicon.ico'
qrbug.REPORT_FAILURE_TEMPLATE   = qrbug.STATIC_FILES_PATH / 'report_failure.html'
qrbug.SELECTOR_SCRIPT_FUNCTIONS = qrbug.STATIC_FILES_PATH / 'selector_script_functions.js'
qrbug.LOG_DIRECTORY             = Path('LOGS')
qrbug.EMAIL_LOG_DIRECTORY       = qrbug.LOG_DIRECTORY / 'MAIL'
qrbug.ERROR_LOG_DIRECTORY       = qrbug.LOG_DIRECTORY / 'ERROR'
qrbug.ACTIONS_FOLDER            = Path('ACTIONS')

Path(qrbug.GENERATED_DB_PATH).write_text(
    "# DO NOT EDIT THIS FILE\n"
    +
    ''.join(
        f'user_update({repr(login)})\n'
        f'user_add("admin", {repr(login)})\n'
        for login in qrbug.QRBUG_ADMINS
    )
    +
    ''.join(
        f'user_update({repr(login)})\n'
        f'user_add("admin-backtrace", {repr(login)})\n'
        for login in qrbug.QRBUG_BACKTRACE
    ), encoding='utf-8'
)

qrbug.CONFIGS = {
    "user_update"      : qrbug.user_update,
    "user_add"         : qrbug.user_add,
    "user_remove"      : qrbug.user_remove,
    "failure_update"   : qrbug.failure_update,
    "failure_add"      : qrbug.failure_add,
    "failure_remove"   : qrbug.failure_remove,
    "DisplayTypes"     : qrbug.DisplayTypes, # DEPRECATED
    "Text"             : qrbug.DisplayTypes.text,
    "Button"           : qrbug.DisplayTypes.button,
    "HTML"             : qrbug.DisplayTypes.html,
    "Textarea"         : qrbug.DisplayTypes.textarea,
    "Input"            : qrbug.DisplayTypes.input,
    "Display"          : qrbug.DisplayTypes.display,
    "Datalist"         : qrbug.DisplayTypes.datalist,
    "thing_update"     : qrbug.thing_update,
    "thing_del"        : qrbug.thing_del,
    "thing_remove"     : qrbug.thing_remove,
    "thing_add"        : qrbug.thing_add,
    "thing_add_failure": qrbug.thing_add_failure,
    "thing_del_failure": qrbug.thing_del_failure,
    "action"           : qrbug.action_update,
    "selector"         : qrbug.selector_update,
    "selector_concerned_add": qrbug.selector_concerned_add,
    "selector_concerned_del": qrbug.selector_concerned_del,
    "dispatcher_update": qrbug.dispatcher_update,
    "dispatcher_del"   : qrbug.dispatcher_del,
    "MESSAGES"         : qrbug.MESSAGES,
}
qrbug.INCIDENT_FUNCTIONS = {
    "incident_new": qrbug.incident_new,
    "incident_del": qrbug.incident_del,
    "dispatch"    : qrbug.dispatch,
}
